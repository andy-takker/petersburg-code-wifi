version: '3.9'
services:
  database:
    build:
      context: docker/postgres

    restart: on-failure
    volumes: 
      - ./database/data:/var/lib/postgresql/data
      - ./database/backups:/backups
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PORT: ${POSTGRES_PORT}

  redis:
    image: redis
    restart: on-failure
    command: "redis-server --requirepass ${REDIS_PASSWORD}"
    environment:
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    volumes:
      - redis_data:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro

  backend:
    image: backend
    depends_on: 
      - database
      - redis
      - celery_worker
      - celery_scheduler
    command: "/sbin/init"
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
      args:
        DEBUG: ${DEBUG}
        PROJECT_NAME: ${PROJECT_NAME}
        SERVER_NAME: ${SERVER_NAME}
        VERSION: ${VERSION}
        APP_PORT: ${APP_PORT}
  
        POSTGRES_HOST: database
        POSTGRES_PORT: ${POSTGRES_PORT}
        POSTGRES_DB: ${POSTGRES_DB}
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  
        REDIS_HOST: redis
        REDIS_PORT: ${REDIS_PORT}
        REDIS_PASSWORD: ${REDIS_PASSWORD}
  
        DIGITAL_SPB_TOKEN: ${DIGITAL_SPB_TOKEN}
        VK_CLIENT_SECRET: ${VK_CLIENT_SECRET}
    ports:
      - "${APP_PORT}:${APP_PORT}"
    privileged: true

  celery_worker:
    image: backend
    command: celery -A celery_worker.celery_conf worker -l INFO -f ./logs/celery_worker.log --concurrency 4
    depends_on:
      - database
      - redis
    volumes:
      - ./logs:/backend/logs

  celery_scheduler:
    image: backend
    command: celery -A celery_worker.celery_conf beat -l info --scheduler celery_sqlalchemy_scheduler.schedulers:DatabaseScheduler
    depends_on:
      - database
      - redis
      - celery_worker
    volumes:
      - ./logs:/backend/logs

  nginx:
    build:
      context: docker/nginx
      dockerfile: Dockerfile
    ports:
      - "${NGINX_PORT:-1337}:80"
    depends_on:
      - backend


volumes:
  redis_data:
    driver: local
